[build-system]
requires = ["hatch==1.14.1", "hatchling==1.27.0"]
build-backend = "hatchling.build"

[project]
authors = [
    { name = "Idan Morad", email = "idanmorad.arthas@gmail.com" },
]
name = "data_science_utils"
dynamic = ["version"]
description = "Data Science Utils extends the Scikit-Learn API and Matplotlib API to provide simple methods that simplify tasks and visualizations for data science projects."
license = { text = "MIT" }
requires-python = ">=3.10"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: tox",
    "Framework :: Matplotlib",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Utilities"
]
keywords = ["data-science", "utilities", "python", "machine-learning", "scikit-learn", "matplotlib", "plotly"]
dependencies = [
    "numpy>=1.26.3",
    "scipy>=1.11.4",
    "pandas>=2.1.4",
    "matplotlib>=3.8.4",
    "seaborn>=0.12.2",
    "scikit-learn>=1.2.2",
    "pydotplus>=2.0.2",
    "joblib>=1.2.0",
    "plotly>=6.1.1"
]

[project.urls]
Homepage = "https://github.com/idanmoradarthas/DataScienceUtils"
Documentation = "https://datascienceutils.readthedocs.io/en/latest/"
Issues = "https://github.com/idanmoradarthas/DataScienceUtils/issues"
Repository = "https://github.com/idanmoradarthas/DataScienceUtils.git"
Changelog = "https://github.com/idanmoradarthas/DataScienceUtils/blob/master/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["ds_utils"]

[tool.hatch.version]
path = "ds_utils/__init__.py"

[tool.hatch.envs.test]
dependencies = [
    "pyarrow==19.0.1",
    "pytest==8.4.1",
    "pytest-mock==3.14.0",
    "pytest-cov==6.0.0",
    "pytest-xdist==3.6.1",
    "pytest-mpl==0.17.0",
    "kaleido==1.0.0",
    "ruff==0.5.5"
]

[tool.hatch.envs.test.env-vars]
PYTHONPATH = "."
OMP_NUM_THREADS = "1"
DISPLAY = ":99"

[tool.hatch.envs.test.scripts]
run = "pytest {args:--mpl --cov-config=.coveragerc --cov=ds_utils --cov-report=xml -n auto}"
ruff = "python -m ruff {args:.}"

[tool.hatch.envs.dev]
dependencies = [
    "build==1.2.2.post1",
    "twine==6.1.0",
]

[tool.ruff]
line-length = 120
# Assume Python 3.10 for now, can be made dynamic if necessary an or match project minimum.
target-version = "py310"

[tool.ruff.lint]
# Extend Ruff's recommended rule set
extend-select = [
    "D",  # flake8-docstrings
    "PT", # flake8-pytest-style
]
# Enable Pyflakes and pycodestyle rules by default.
# For a full list of available rules, see:
# https://docs.astral.sh/ruff/rules/
select = ["E", "F", "W"] # Base set: pycodestyle errors, Pyflakes, pycodestyle warnings
ignore = [
    "D203", # one-blank-line-before-class (conflicts with D211)
    "D213", # multi-line-summary-second-line (conflicts with D212)
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
# Sort imports within sections alphabetically.
# Ensure that from imports are grouped together.
force-sort-within-sections = true
# Combine as imports when sorting.
combine-as-imports = true
# Known first party imports (your project's modules)
known-first-party = ["ds_utils", "tests"]
